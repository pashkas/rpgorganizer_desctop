<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Model="clr-namespace:Sample.Model"
    xmlns:SketchControls="clr-namespace:Microsoft.Expression.Prototyping.SketchControls;assembly=Microsoft.Expression.Prototyping.SketchControls"
    xmlns:behavior="clr-namespace:DotNetLead.DragDrop.UI.Behavior"
    xmlns:behavior1="clr-namespace:Sample.Behavior"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
    d:IsSketchFlowDefaultStyle="True"
    d:IsSketchFlowStyle="True"
    mc:Ignorable="d">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Microsoft.Expression.Prototyping.SketchControls;component/ScrollViewerStyles.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <Model:subtasksVisibleConverter x:Key="subtasksListConverter" />
    <SolidColorBrush x:Key="BaseBackground-Sketch" Color="#FFFFFFFF" />
    <SolidColorBrush x:Key="BaseForeground-Sketch" Color="#FF606060" />
    <SolidColorBrush x:Key="BaseBorder-Sketch" Color="#FF606060" />
    <!--<LinearGradientBrush x:Key="MouseOverBackground-Sketch">
        <GradientStop Offset="1" Color="LightYellow" />
        <GradientStop Offset="0" Color="LightYellow" />
    </LinearGradientBrush>-->
    <LinearGradientBrush x:Key="MouseOverBackground-Sketch">
        <GradientStop Offset="1" Color="Yellow" />
        <GradientStop Offset="0" Color="#578000" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="PressedBackground-Sketch" Color="#FF959595" />
    <SolidColorBrush x:Key="DisabledBackground-Sketch" Color="#FFD8D8D8" />
    <SolidColorBrush x:Key="DisabledForeground-Sketch" Color="#FF9F9F9F" />
    <SolidColorBrush x:Key="PressedForeground-Sketch" Color="#FF606060" />
    <SolidColorBrush x:Key="FocusedBorder-Sketch" Color="#FF000000" />
    <SolidColorBrush x:Key="DisabledBorder-Sketch" Color="#FF9F9F9F" />
    <SolidColorBrush x:Key="SelectedBackground-Sketch" Color="#FFAFAFAF" />
    <!--
        FontFamily
        <FontFamily x:Key="FontFamily-Sketch">/Sample;component/Fonts/#Buxton Sketch</FontFamily>
    -->
    <!--<FontFamily x:Key="OldFont">/Sample;component/Fonts/#Morpheus</FontFamily>-->
    <FontFamily x:Key="OldFont">/Sample;component/Fonts/#Morpheus</FontFamily>
    <!--<FontFamily x:Key="FontFamily-Sketch">Times New Roman</FontFamily>-->
    <FontFamily x:Key="FontFamily-Sketch">/Sample;component/Fonts/#Morpheus</FontFamily>
    <sys:Double x:Key="SizeDouble-Sketch">16</sys:Double>
    <FontWeight x:Key="FontWeight-Sketch">Normal</FontWeight>

    <!--  Basic Sketch TextBlock  -->
    <Style
        x:Key="BasicTextBlock-Sketch"
        d:StyleDefaultContent="Basic Text"
        TargetType="{x:Type TextBlock}">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Foreground" Value="{StaticResource BaseForeground-Sketch}" />
        <Setter Property="FontFamily" Value="{StaticResource FontFamily-Sketch}" />
        <Setter Property="FontSize" Value="{StaticResource SizeDouble-Sketch}" />
        <Setter Property="Background" Value="Transparent" />
    </Style>

    <!--  Color Picker  -->
    <Style x:Key="ColorPic" TargetType="xctk:ColorPicker">
        <Setter Property="AvailableColorsHeader" Value="Дополнительные цвета" />
        <Setter Property="StandardColorsHeader" Value="Стандартные цвета" />

        <Setter Property="RecentColorsHeader" Value="Последние выбранные" />
        <Setter Property="ShowRecentColors" Value="False" />
    </Style>

    <Style
        x:Key="Tittle"
        BasedOn="{StaticResource BasicTextBlock-Sketch}"
        TargetType="{x:Type TextBlock}">
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="FontSize" Value="20" />
        <Setter Property="FontFamily" Value="{StaticResource OldFont}" />
    </Style>

    <Style
        x:Key="Norm"
        BasedOn="{StaticResource Tittle}"
        TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="16" />
    </Style>
    <!--  Sketch TextBlock  -->
    <Style
        x:Key="TextBlock-Sketch"
        BasedOn="{StaticResource Norm}"
        TargetType="{x:Type TextBlock}" />
    <Style
        x:Key="TextBlock-SketchWrap"
        BasedOn="{StaticResource Norm}"
        TargetType="{x:Type TextBlock}">
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="Margin" Value="3,0,3,0" />
    </Style>

    <!--  Sketch Rectangle  -->
    <Style x:Key="Rectangle-Sketch" TargetType="{x:Type SketchControls:SketchRectangleUC}">
        <Setter Property="BorderBrush" Value="{StaticResource BaseBorder-Sketch}" />
        <Setter Property="StrokeWidth" Value="2" />
        <Setter Property="SegmentLength" Value="8" />
        <Setter Property="SegmentOffset" Value="0.12" />
        <Setter Property="SegmentVariance" Value="0.1" />
        <Setter Property="Background" Value="{StaticResource BaseBackground-Sketch}" />
    </Style>

    <!--  Sketch Circle  -->
    <Style x:Key="Circle-Sketch" TargetType="{x:Type SketchControls:SketchCircleUC}">
        <Setter Property="BorderBrush" Value="{StaticResource BaseBorder-Sketch}" />
        <Setter Property="StrokeWidth" Value="2" />
        <Setter Property="SegmentLength" Value="8" />
        <Setter Property="SegmentOffset" Value="0.12" />
        <Setter Property="SegmentVariance" Value="0.1" />
        <Setter Property="Background" Value="{StaticResource BaseBackground-Sketch}" />
    </Style>

    <!--  Sketch Focus Control  -->
    <Style
        x:Key="FocusControl-Sketch"
        d:IsControlPart="True"
        TargetType="{x:Type Control}" />



    <!--  Sketch Button  -->
    <Style
        x:Key="Button-Sketch"
        BasedOn="{x:Null}"
        TargetType="{x:Type Button}">
        <Setter Property="FontFamily" Value="{StaticResource FontFamily-Sketch}" />
        <Setter Property="FontSize" Value="{StaticResource SizeDouble-Sketch}" />
        <Setter Property="Foreground" Value="{StaticResource BaseForeground-Sketch}" />
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}" />
        <Setter Property="Background" Value="#EBBB79" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <!--  В качестве корневого элемента используется Grid, поскольку так проще добавлять дополнительные элементы для настройки кнопки  -->
                    <Grid x:Name="Grid">
                        <!--  ContentPresenter — это область, где элемент управления размещает текстовое и другое содержимое  -->
                        <Border
                            x:Name="SketchRectangleUC"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="1"
                            FocusVisualStyle="{StaticResource FocusControl-Sketch}" />
                        <ContentPresenter
                            Margin="0,0,0,0"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Content="{TemplateBinding Content}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="SketchRectangleUC" Property="Background" Value="{StaticResource MouseOverBackground-Sketch}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="SketchRectangleUC" Property="Background" Value="{StaticResource PressedBackground-Sketch}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="FontWeight" Value="{StaticResource FontWeight-Sketch}" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusControl-Sketch}" />
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource DisabledForeground-Sketch}" />
                <Setter Property="Opacity" Value="0.7" />
                <Setter Property="BorderBrush" Value="{StaticResource DisabledBorder-Sketch}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style
        x:Key="FocViewButtons"
        BasedOn="{StaticResource Button-Sketch}"
        TargetType="{x:Type Button}">

        <Setter Property="Margin" Value="2" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
    </Style>

    <Style
        x:Key="ButtonWidthImageStyle"
        BasedOn="{StaticResource Button-Sketch}"
        TargetType="Button">
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="Margin" Value="21,1" />
    </Style>

    <!--  Sketch CheckBox  -->
    <Style x:Key="CheckBox-Sketch" TargetType="{x:Type CheckBox}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="FontStyle" Value="Italic" />

        <Setter Property="BorderBrush" Value="{StaticResource BaseBorder-Sketch}" />
        <Setter Property="Background" Value="{StaticResource BaseBackground-Sketch}" />
        <Setter Property="FontFamily" Value="{StaticResource FontFamily-Sketch}" />
        <Setter Property="FontSize" Value="{StaticResource SizeDouble-Sketch}" />
        <Setter Property="Foreground" Value="{StaticResource BaseBorder-Sketch}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <!--  BulletDecorator используется для выравнивания флажка и содержимого по базовой линии  -->
                    <BulletDecorator Background="Transparent">
                        <BulletDecorator.Bullet>
                            <Grid
                                x:Name="grid"
                                Width="12"
                                Height="12">
                                <SketchControls:SketchRectangleUC
                                    x:Name="SketchRectangleUC1"
                                    Margin="-2,-2,-2,-2"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    ExtensionLength="0"
                                    ExtensionVariance="0"
                                    FocusVisualStyle="{StaticResource FocusControl-Sketch}"
                                    SegmentLength="4"
                                    SegmentOffset="0.2"
                                    StrokeWidth="1" />
                                <Path
                                    x:Name="CheckIcon"
                                    Width="10.5"
                                    Height="10"
                                    Data="M102.03442,598.79645 L105.22962,597.78918 L106.78825,600.42358 C106.78825,600.42358 108.51028,595.74304 110.21724,593.60419 C112.00967,591.35822 114.89314,591.42316 114.89314,591.42316 C114.89314,591.42316 112.67844,593.42645 111.93174,594.44464 C110.7449,596.06293 107.15683,604.13837 107.15683,604.13837 z"
                                    Fill="{TemplateBinding BorderBrush}"
                                    Opacity="0"
                                    RenderTransformOrigin="0.5,0.5"
                                    Stretch="Fill">
                                    <Path.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform />
                                            <SkewTransform />
                                            <RotateTransform />
                                            <TranslateTransform />
                                        </TransformGroup>
                                    </Path.RenderTransform>
                                </Path>
                                <SketchControls:SketchRectangleUC
                                    x:Name="Indetermined"
                                    Margin="2"
                                    Background="{TemplateBinding BorderBrush}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    ExtensionLength="0"
                                    ExtensionVariance="0"
                                    FocusVisualStyle="{StaticResource FocusControl-Sketch}"
                                    SegmentLength="4"
                                    SegmentOffset="0.2"
                                    StrokeWidth="1"
                                    Visibility="Collapsed" />
                            </Grid>
                        </BulletDecorator.Bullet>
                        <ContentPresenter
                            Margin="7,0,0,0"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Top"
                            Content="{TemplateBinding Content}" />
                    </BulletDecorator>

                    <!--  Свойство видимости (Visibility) используется для скрытия и отображения флажка (CheckMark) в зависимости от события IsChecked  -->
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter TargetName="Indetermined" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="SketchRectangleUC1" Property="BorderBrush" Value="{StaticResource FocusedBorder-Sketch}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="CheckIcon" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="SketchRectangleUC1" Property="Background" Value="{StaticResource MouseOverBackground-Sketch}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="SketchRectangleUC1" Property="Background" Value="{StaticResource PressedBackground-Sketch}" />
                            <Setter TargetName="CheckIcon" Property="Margin" Value="0,-1,0,0" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="SketchRectangleUC1" Property="Background" Value="{StaticResource BaseBackground-Sketch}" />
                            <Setter TargetName="SketchRectangleUC1" Property="BorderBrush" Value="{StaticResource DisabledBorder-Sketch}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="FontWeight" Value="{StaticResource FontWeight-Sketch}" />
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource DisabledForeground-Sketch}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  Sketch ListBoxItem  -->
    <Style
        x:Key="ListBoxItem-Sketch"
        d:IsControlPart="True"
        TargetType="{x:Type ListBoxItem}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Padding" Value="2,0,0,0" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Grid
                        x:Name="Bd"
                        Background="#00FF0000"
                        SnapsToDevicePixels="true">
                        <Border
                            x:Name="SketchRectangleUC"
                            BorderBrush="{x:Null}"
                            BorderThickness="2"
                            FocusVisualStyle="{StaticResource FocusControl-Sketch}" />
                        <ContentPresenter
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="SketchRectangleUC" Property="Background" Value="{StaticResource MouseOverBackground-Sketch}" />
                            <Setter TargetName="SketchRectangleUC" Property="BorderBrush" Value="{StaticResource MouseOverBackground-Sketch}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True" />
                        <Trigger Property="IsSelected" Value="true">
                            <Setter TargetName="SketchRectangleUC" Property="BorderBrush" Value="{StaticResource SelectedBackground-Sketch}" />
                            <Setter TargetName="SketchRectangleUC" Property="Background" Value="Yellow" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true" />
                                <Condition Property="Selector.IsSelectionActive" Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.ControlTextBrushKey}}" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="FontFamily" Value="{StaticResource FontFamily-Sketch}" />
        <Setter Property="FontWeight" Value="{StaticResource FontWeight-Sketch}" />
        <Setter Property="FontSize" Value="{StaticResource SizeDouble-Sketch}" />
        <Setter Property="Foreground" Value="{StaticResource BaseForeground-Sketch}" />
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource DisabledForeground-Sketch}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style
        x:Key="ListBoxItem-Sketch2"
        d:IsControlPart="True"
        BasedOn="{StaticResource ListBoxItem-Sketch}"
        TargetType="{x:Type ListBoxItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Grid>
                        <ContentPresenter Name="cpz" />
                        <Border
                            Name="Border"
                            BorderBrush="Transparent"
                            BorderThickness="0"
                            SnapsToDevicePixels="true" />
                        <i:Interaction.Behaviors>
                            <behavior:FrameworkElementDragBehavior />
                            <behavior:FrameworkElementDropBehavior />
                        </i:Interaction.Behaviors>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter TargetName="Border" Property="BorderThickness" Value="3" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="ForestGreen" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>


    </Style>

    <!--  Sketch ScrollViewer ControlTemplate  -->
    <ControlTemplate x:Key="ScrollViewerTemplate-Sketch" TargetType="{x:Type ScrollViewer}">
        <Grid x:Name="Grid" Background="{TemplateBinding Background}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <SketchControls:SketchRectangleUC
                Grid.RowSpan="2"
                Grid.ColumnSpan="2"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                Foreground="{TemplateBinding Foreground}"
                StrokeWidth="2" />
            <ScrollContentPresenter
                x:Name="PART_ScrollContentPresenter"
                Grid.Row="0"
                Grid.Column="0"
                Margin="{TemplateBinding Padding}"
                CanContentScroll="{TemplateBinding CanContentScroll}"
                CanHorizontallyScroll="False"
                CanVerticallyScroll="False"
                Content="{TemplateBinding Content}"
                ContentTemplate="{TemplateBinding ContentTemplate}" />
            <!--  ReSharper disable Xaml.StaticResourceNotResolved  -->
            <ScrollBar
                x:Name="PART_VerticalScrollBar"
                Grid.Row="0"
                Grid.Column="1"
                AutomationProperties.AutomationId="VerticalScrollBar"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                Cursor="Arrow"
                Foreground="{TemplateBinding Foreground}"
                Maximum="{TemplateBinding ScrollableHeight}"
                Minimum="0"
                Style="{StaticResource ScrollBar-Sketch}"
                ViewportSize="{TemplateBinding ViewportHeight}"
                Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                Value="{Binding Path=VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
            <!--  ReSharper restore Xaml.StaticResourceNotResolved  -->
            <!--  ReSharper disable Xaml.StaticResourceNotResolved  -->
            <ScrollBar
                x:Name="PART_HorizontalScrollBar"
                Grid.Row="1"
                Grid.Column="0"
                AutomationProperties.AutomationId="HorizontalScrollBar"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                Cursor="Arrow"
                Foreground="{TemplateBinding Foreground}"
                Maximum="{TemplateBinding ScrollableWidth}"
                Minimum="0"
                Orientation="Horizontal"
                Style="{StaticResource ScrollBar-Sketch}"
                ViewportSize="{TemplateBinding ViewportWidth}"
                Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                Value="{Binding Path=HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
            <!--  ReSharper restore Xaml.StaticResourceNotResolved  -->
        </Grid>
    </ControlTemplate>

    <!--  Sketch ScrollViewer  -->
    <Style x:Key="ScrollViewer-Sketch-List" TargetType="{x:Type ScrollViewer}">
        <Setter Property="BorderBrush" Value="{StaticResource BaseBorder-Sketch}" />
        <Setter Property="Background" Value="{StaticResource BaseBackground-Sketch}" />
        <Setter Property="Template" Value="{StaticResource ScrollViewerTemplate-Sketch}" />
        <Setter Property="Padding" Value="2" />
    </Style>

    <Style x:Key="ScrollViewer-Sketch" TargetType="{x:Type ScrollViewer}">
        <Setter Property="BorderBrush" Value="{StaticResource BaseBorder-Sketch}" />
        <Setter Property="Background" Value="{StaticResource BaseBackground-Sketch}" />
        <Setter Property="Template" Value="{StaticResource ScrollWithoutBorderTemplate}" />
        <Setter Property="Padding" Value="2" />

    </Style>



    <!--  Sketch ReadOnly ComboBox ToggleButton  -->
    <Style
        x:Key="ComboBoxReadonlyToggleButton-Sketch"
        d:IsControlPart="True"
        TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="ClickMode" Value="Press" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid>
                        <SketchControls:SketchRectangleUC
                            x:Name="SketchRectangleUC"
                            HorizontalAlignment="Stretch"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            ExtensionLength="0"
                            ExtensionVariance="0"
                            Foreground="{TemplateBinding Foreground}"
                            SegmentLength="8"
                            SegmentOffset="0.12"
                            SegmentVariance="0.1"
                            StrokeWidth="2" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="SketchRectangleUC" Property="BorderBrush" Value="{StaticResource FocusedBorder-Sketch}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="SketchRectangleUC" Property="BorderBrush" Value="{StaticResource FocusedBorder-Sketch}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false" />
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="FontFamily" Value="{StaticResource FontFamily-Sketch}" />
        <Setter Property="FontSize" Value="{StaticResource SizeDouble-Sketch}" />
        <Setter Property="FontWeight" Value="{StaticResource FontWeight-Sketch}" />
        <Setter Property="Foreground" Value="{StaticResource BaseForeground-Sketch}" />
        <Setter Property="Background" Value="{StaticResource BaseBackground-Sketch}" />
        <Setter Property="BorderBrush" Value="{StaticResource BaseBorder-Sketch}" />
    </Style>

    <!--  Sketch Editable ComboBox TextBox  -->
    <Style
        x:Key="ComboBoxEditableTextBox-Sketch"
        d:IsControlPart="true"
        TargetType="{x:Type TextBox}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="MinWidth" Value="0" />
        <Setter Property="MinHeight" Value="0" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <!--  ReSharper disable once Xaml.StaticResourceNotResolved  -->
                    <ScrollViewer
                        x:Name="PART_ContentHost"
                        Focusable="false"
                        HorizontalScrollBarVisibility="Hidden"
                        Style="{StaticResource ScrollViewer-Sketch2}"
                        VerticalScrollBarVisibility="Hidden" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Sketch Editable ComboBox ToggleButton  -->
    <Style
        x:Key="ComboBoxToggleButton-Sketch"
        d:IsControlPart="true"
        TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="ClickMode" Value="Press" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid
                        x:Name="Chrome"
                        Width="{StaticResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"
                        Background="{TemplateBinding Background}"
                        SnapsToDevicePixels="true">
                        <Rectangle
                            x:Name="CheckedVisual"
                            Fill="{StaticResource PressedBackground-Sketch}"
                            Stroke="{x:Null}"
                            Visibility="Collapsed" />
                        <Path
                            x:Name="Arrow"
                            Margin="0,1,0,0"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Data="M0,0L3.5,4 7,0z"
                            Fill="Black" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="CheckedVisual" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Arrow" Property="Fill" Value="#AFAFAF" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Sketch Editable ComboBox ControlTemplate  -->
    <ControlTemplate
        x:Key="ComboBoxEditableTemplate-Sketch"
        d:IsControlPart="true"
        TargetType="{x:Type ComboBox}">
        <Grid x:Name="Placement" SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Popup
                x:Name="PART_Popup"
                Grid.ColumnSpan="2"
                AllowsTransparency="true"
                IsOpen="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                Placement="Bottom"
                PopupAnimation="{StaticResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                <Border
                    x:Name="DropDownBorder"
                    Background="{StaticResource {x:Static SystemColors.WindowBrushKey}}"
                    BorderBrush="{StaticResource {x:Static SystemColors.WindowFrameBrushKey}}"
                    BorderThickness="1">
                    <!--  ReSharper disable Xaml.StaticResourceNotResolved  -->
                    <ScrollViewer Style="{StaticResource ScrollViewer-Sketch2}">
                        <!--  ReSharper restore Xaml.StaticResourceNotResolved  -->
                        <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </ScrollViewer>
                </Border>
            </Popup>
            <TextBox
                x:Name="PART_EditableTextBox"
                Margin="{TemplateBinding Padding}"
                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                IsReadOnly="{Binding Path=IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}"
                Style="{StaticResource ComboBoxEditableTextBox-Sketch}" />
            <ToggleButton
                Grid.Column="1"
                Width="{StaticResource ToolButtonWidth}"
                Background="White"
                BorderBrush="Transparent"
                IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                <ContentControl Margin="-3" Template="{StaticResource ContentControlArrowDown}" />
            </ToggleButton>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsKeyboardFocusWithin" Value="true">
                <Setter Property="Foreground" Value="Black" />
            </Trigger>
            <Trigger Property="HasItems" Value="false">
                <Setter TargetName="DropDownBorder" Property="Height" Value="95" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.GrayTextBrushKey}}" />
                <Setter Property="Background" Value="#FFF4F4F4" />
            </Trigger>
            <Trigger Property="IsGrouping" Value="true">
                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--  Sketch ComboBox  -->
    <Style x:Key="ComboBox-Sketch" TargetType="{x:Type ComboBox}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusControl-Sketch}" />
        <Setter Property="Foreground" Value="{StaticResource BaseForeground-Sketch}" />
        <Setter Property="Background" Value="{StaticResource BaseBackground-Sketch}" />
        <Setter Property="BorderBrush" Value="{StaticResource BaseBorder-Sketch}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="Padding" Value="4,3" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource ListBoxItem-Sketch}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid x:Name="MainGrid" SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="28.25" MinWidth="{StaticResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
                        </Grid.ColumnDefinitions>
                        <Popup
                            x:Name="PART_Popup"
                            Grid.ColumnSpan="2"
                            Margin="1"
                            AllowsTransparency="true"
                            IsOpen="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                            Placement="Bottom"
                            PopupAnimation="{StaticResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                            <Grid
                                x:Name="DropDownBorder"
                                Width="{Binding ActualWidth, ElementName=MainGrid, Mode=Default}"
                                Background="{StaticResource {x:Static SystemColors.WindowBrushKey}}">
                                <!--  ReSharper disable Xaml.StaticResourceNotResolved  -->
                                <ScrollViewer
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    CanContentScroll="true"
                                    Foreground="{TemplateBinding Foreground}"
                                    Style="{StaticResource ScrollViewer-Sketch2}"
                                    d:LayoutOverrides="Width, Height">
                                    <!--  ReSharper restore Xaml.StaticResourceNotResolved  -->
                                    <ItemsPresenter
                                        Margin="2,2,2,2"
                                        KeyboardNavigation.DirectionalNavigation="Contained"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                        <ToggleButton
                            Grid.ColumnSpan="2"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Foreground="{TemplateBinding Foreground}"
                            IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                            Style="{StaticResource ComboBoxReadonlyToggleButton-Sketch}" />
                        <ContentPresenter
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            IsHitTestVisible="false"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <Path
                            Grid.Column="2"
                            Width="13"
                            Height="7"
                            HorizontalAlignment="Center"
                            Data="M229.75,20.5 L236.08108,25.5 241.93919,20.5"
                            Fill="{x:Null}"
                            IsHitTestVisible="False"
                            Stretch="Fill"
                            Stroke="{TemplateBinding BorderBrush}"
                            StrokeDashCap="Round"
                            StrokeEndLineCap="Round"
                            StrokeLineJoin="Round"
                            StrokeStartLineCap="Round"
                            StrokeThickness="2" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="PART_Popup" Property="HasDropShadow" Value="true" />
                        <Trigger Property="HasItems" Value="false" />
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.GrayTextBrushKey}}" />
                            <Setter Property="Background" Value="#FFF4F4F4" />
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="FontFamily" Value="{StaticResource FontFamily-Sketch}" />
        <Setter Property="FontWeight" Value="{StaticResource FontWeight-Sketch}" />
        <Setter Property="FontSize" Value="{StaticResource SizeDouble-Sketch}" />
    </Style>

    <!--  Sketch Note  -->
    <Style
        x:Key="Note-Sketch"
        d:ExplicitHeight="180"
        d:ExplicitWidth="200"
        d:StyleDefaultContent="Note"
        BasedOn="{x:Null}"
        TargetType="{x:Type TextBox}">
        <Setter Property="Foreground" Value="#FF5B5B5B" />
        <Setter Property="Background" Value="{StaticResource {x:Static SystemColors.WindowBrushKey}}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Grid>
                        <Rectangle
                            Margin="0,0,0,0"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            RadiusX="1"
                            RadiusY="1"
                            Stroke="{x:Null}">
                            <Rectangle.Fill>
                                <LinearGradientBrush StartPoint="-1.195,-1.186" EndPoint="-1.219,-1.195">
                                    <GradientStop Offset="1" Color="#FFFDF47B" />
                                    <GradientStop Offset="0" Color="#FFEBE380" />
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                            <Rectangle.Effect>
                                <DropShadowEffect
                                    BlurRadius="10"
                                    Opacity="0.3"
                                    Color="#FF000000" />
                            </Rectangle.Effect>
                        </Rectangle>
                        <ScrollViewer
                            x:Name="PART_ContentHost"
                            Margin="10,10,10,10"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Top"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="FontFamily" Value="{StaticResource FontFamily-Sketch}" />
        <Setter Property="FontSize" Value="21" />
        <Setter Property="IsReadOnly" Value="True" />
    </Style>

    <!--  Sketch PasswordBox  -->
    <Style x:Key="PasswordBox-Sketch" TargetType="{x:Type PasswordBox}">
        <Setter Property="Background" Value="{StaticResource BaseBackground-Sketch}" />
        <Setter Property="BorderBrush" Value="{StaticResource BaseBorder-Sketch}" />
        <Setter Property="FontFamily" Value="{StaticResource FontFamily-Sketch}" />
        <Setter Property="PasswordChar" Value="●" />
        <Setter Property="Foreground" Value="{StaticResource BaseForeground-Sketch}" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">
                    <ScrollViewer
                        x:Name="PART_ContentHost"
                        Padding="0"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        Foreground="{TemplateBinding Foreground}"
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                        Style="{StaticResource ScrollViewer-Sketch-List}" />
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_ContentHost" Property="Background" Value="{StaticResource MouseOverBackground-Sketch}" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="PART_ContentHost" Property="BorderBrush" Value="{StaticResource FocusedBorder-Sketch}" />
                            <Setter TargetName="PART_ContentHost" Property="Background" Value="{StaticResource MouseOverBackground-Sketch}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Height" Value="30" />
        <Setter Property="FontSize" Value="{StaticResource SizeDouble-Sketch}" />
        <Setter Property="FontWeight" Value="{StaticResource FontWeight-Sketch}" />
        <Setter Property="MinWidth" Value="17" />
    </Style>

    <!--  Sketch ProgressBar  -->
    <Style x:Key="ProgressBar-Sketch" TargetType="{x:Type ProgressBar}">
        <Setter Property="Foreground" Value="{StaticResource SelectedBackground-Sketch}" />
        <Setter Property="Background" Value="{StaticResource BaseBackground-Sketch}" />
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ProgressBar}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="IndeterminateAnimation" RepeatBehavior="Forever">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="IndeterminateGradientFill" Storyboard.TargetProperty="(UIElement.OpacityMask).(Brush.Transform).(TransformGroup.Children)[0].X">
                                <SplineDoubleKeyFrame KeyTime="0" Value="0" />
                                <SplineDoubleKeyFrame KeyTime="00:00:.5" Value="20" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid x:Name="Background" SnapsToDevicePixels="true">
                        <Rectangle x:Name="PART_Track" Margin="1" />
                        <SketchControls:SketchRectangleUC
                            x:Name="background"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{x:Null}"
                            Foreground="{x:Null}"
                            Style="{StaticResource Rectangle-Sketch}" />
                        <Decorator
                            x:Name="PART_Indicator"
                            Margin="0"
                            HorizontalAlignment="Left">
                            <Grid x:Name="Foreground">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition MaxWidth="15" />
                                    <ColumnDefinition Width="0.1*" />
                                    <ColumnDefinition MaxWidth="15" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <SketchControls:SketchRectangleUC
                                    x:Name="Determinate"
                                    Grid.RowSpan="2"
                                    Grid.ColumnSpan="3"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Stretch"
                                    Background="{TemplateBinding Foreground}"
                                    BorderBrush="{x:Null}"
                                    Foreground="{x:Null}"
                                    Style="{StaticResource Rectangle-Sketch}" />
                                <SketchControls:SketchRectangleUC
                                    x:Name="Indeterminate"
                                    Grid.RowSpan="2"
                                    Grid.ColumnSpan="3"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Stretch"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{x:Null}"
                                    Style="{StaticResource Rectangle-Sketch}"
                                    Visibility="Collapsed" />
                                <Rectangle
                                    x:Name="IndeterminateGradientFill"
                                    Grid.RowSpan="2"
                                    Grid.ColumnSpan="3"
                                    Fill="{TemplateBinding Foreground}"
                                    RadiusX="2"
                                    RadiusY="2"
                                    StrokeThickness="1"
                                    Visibility="Collapsed">
                                    <Rectangle.OpacityMask>
                                        <LinearGradientBrush MappingMode="Absolute" SpreadMethod="Repeat" StartPoint="20,1" EndPoint="0,1">
                                            <LinearGradientBrush.Transform>
                                                <TransformGroup>
                                                    <TranslateTransform X="0" />
                                                    <SkewTransform AngleX="-30" />
                                                </TransformGroup>
                                            </LinearGradientBrush.Transform>
                                            <GradientStop Offset="0.237" Color="#FF000000" />
                                            <GradientStop Offset=".25" />
                                            <GradientStop Offset="0.677" Color="#FF000000" />
                                            <GradientStop Offset="0.655" />
                                        </LinearGradientBrush>
                                    </Rectangle.OpacityMask>
                                </Rectangle>
                            </Grid>
                        </Decorator>
                        <SketchControls:SketchRectangleUC
                            x:Name="border"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Background="{x:Null}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Foreground="{x:Null}"
                            Style="{StaticResource Rectangle-Sketch}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Orientation" Value="Vertical">
                            <Setter TargetName="Background" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="PART_Track" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="90" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="PART_Indicator" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="90" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="Foreground" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsIndeterminate" Value="true">
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="IndeterminateAnimation_BeginStoryboard" Storyboard="{StaticResource IndeterminateAnimation}" />
                            </Trigger.EnterActions>
                            <Setter TargetName="Indeterminate" Property="Visibility" Value="Visible" />
                            <Setter TargetName="IndeterminateGradientFill" Property="Visibility" Value="Visible" />
                            <Setter TargetName="Determinate" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsIndeterminate" Value="false">
                            <Setter TargetName="Determinate" Property="Visibility" Value="Visible" />
                            <Setter TargetName="Indeterminate" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="IndeterminateGradientFill" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Sketch Repeat button  -->
    <Style
        x:Key="RepeatButton-Sketch"
        BasedOn="{x:Null}"
        TargetType="{x:Type RepeatButton}">
        <Setter Property="FontFamily" Value="./#Segoe Print" />
        <Setter Property="FontSize" Value="13" />
        <Setter Property="Foreground" Value="{StaticResource BaseForeground-Sketch}" />
        <Setter Property="BorderBrush" Value="{StaticResource BaseBorder-Sketch}" />
        <Setter Property="Background" Value="{StaticResource BaseBackground-Sketch}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <!--  В качестве корневого элемента используется Grid, поскольку так проще добавлять дополнительные элементы для настройки кнопки  -->
                    <Grid x:Name="Grid">
                        <!--  ContentPresenter — это область, где элемент управления размещает текстовое и другое содержимое  -->
                        <SketchControls:SketchRectangleUC
                            x:Name="SketchRectangleUC"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Foreground="{TemplateBinding Foreground}"
                            SegmentLength="4"
                            SegmentOffset="0.15"
                            SegmentVariance="0.1"
                            StrokeWidth="2" />
                        <Path
                            x:Name="path"
                            Width="10"
                            Height="6"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Data="M50.25,19.5 L55,12 60.25,19.75"
                            Fill="{x:Null}"
                            Stretch="Fill"
                            Stroke="{TemplateBinding BorderBrush}"
                            StrokeThickness="2" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="true">
                            <Setter TargetName="SketchRectangleUC" Property="BorderBrush" Value="{StaticResource FocusedBorder-Sketch}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="SketchRectangleUC" Property="Background" Value="{StaticResource MouseOverBackground-Sketch}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="SketchRectangleUC" Property="Background" Value="{StaticResource BaseBorder-Sketch}" />
                            <Setter TargetName="path" Property="Stroke" Value="{StaticResource PressedBackground-Sketch}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="true" />
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="path" Property="Stroke" Value="{StaticResource MouseOverBackground-Sketch}" />
                            <Setter TargetName="SketchRectangleUC" Property="Background" Value="{StaticResource BaseBackground-Sketch}" />
                            <Setter TargetName="SketchRectangleUC" Property="BorderBrush" Value="{StaticResource DisabledBorder-Sketch}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Sketch Radio Button  -->
    <Style x:Key="RadioButton-Sketch" TargetType="{x:Type RadioButton}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="Foreground" Value="{StaticResource BaseForeground-Sketch}" />
        <Setter Property="Background" Value="{StaticResource BaseBackground-Sketch}" />
        <Setter Property="BorderBrush" Value="{StaticResource BaseBorder-Sketch}" />
        <Setter Property="Foreground" Value="{StaticResource BaseBorder-Sketch}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <!--  BulletDecorator используется для выравнивания флажка и содержимого по базовой линии  -->
                    <BulletDecorator
                        HorizontalAlignment="Left"
                        VerticalAlignment="Top"
                        Background="Transparent"
                        FocusVisualStyle="{StaticResource FocusControl-Sketch}">
                        <BulletDecorator.Bullet>
                            <Grid
                                Width="15"
                                Height="15"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center">
                                <Ellipse
                                    x:Name="Ellipse_Border"
                                    Width="12"
                                    Height="12"
                                    Margin="0,0,0,0"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Top"
                                    Fill="{StaticResource BaseBackground-Sketch}"
                                    StrokeThickness="3" />
                                <SketchControls:SketchCircleUC
                                    x:Name="SketchCircleUC"
                                    Width="14"
                                    Height="14"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Top"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    ExtensionLength="0"
                                    ExtensionVariance="0"
                                    FocusVisualStyle="{StaticResource FocusControl-Sketch}"
                                    SegmentLength="0.8"
                                    SegmentOffset="0.8"
                                    SegmentVariance="0.1"
                                    StrokeWidth="2" />
                                <Ellipse
                                    x:Name="CheckMark"
                                    Width="6"
                                    Height="6"
                                    Margin="3"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Top"
                                    Fill="{TemplateBinding BorderBrush}" />
                            </Grid>
                        </BulletDecorator.Bullet>
                        <ContentPresenter
                            Margin="3,0,0,0"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Top"
                            FocusVisualStyle="{StaticResource FocusControl-Sketch}"
                            RecognizesAccessKey="True" />
                    </BulletDecorator>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="SketchCircleUC" Property="BorderBrush" Value="{StaticResource FocusedBorder-Sketch}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="false">
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Ellipse_Border" Property="Fill" Value="{StaticResource MouseOverBackground-Sketch}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Ellipse_Border" Property="Fill" Value="{StaticResource PressedBackground-Sketch}" />
                            <Setter TargetName="Ellipse_Border" Property="StrokeThickness" Value="1" />
                            <Setter TargetName="Ellipse_Border" Property="Stroke" Value="{x:Null}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource BaseBorder-Sketch}" />
                            <Setter TargetName="Ellipse_Border" Property="Stroke" Value="{x:Null}" />
                            <Setter TargetName="SketchCircleUC" Property="BorderBrush" Value="{StaticResource DisabledBorder-Sketch}" />
                            <Setter TargetName="Ellipse_Border" Property="Fill" Value="{StaticResource BaseBackground-Sketch}" />
                            <Setter TargetName="CheckMark" Property="Fill" Value="{StaticResource DisabledBorder-Sketch}" />
                            <Setter TargetName="SketchCircleUC" Property="Background" Value="{StaticResource BaseBackground-Sketch}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="FontFamily" Value="{StaticResource FontFamily-Sketch}" />
        <Setter Property="FontWeight" Value="{StaticResource FontWeight-Sketch}" />
        <Setter Property="FontSize" Value="{StaticResource SizeDouble-Sketch}" />
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource DisabledForeground-Sketch}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  Ползунок эскиза - это перетаскиваемая часть ползунка (Slider)  -->
    <Style
        x:Key="Thumb-Sketch"
        d:IsControlPart="True"
        TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="Height" Value="16" />
        <Setter Property="Width" Value="16" />
        <Setter Property="Foreground" Value="{StaticResource BaseBorder-Sketch}" />
        <Setter Property="BorderBrush" Value="{StaticResource BaseBorder-Sketch}" />
        <Setter Property="Background" Value="{StaticResource BaseBackground-Sketch}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid>
                        <SketchControls:SketchRectangleUC
                            x:Name="SketchRectangleUC"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            ExtensionLength="0"
                            ExtensionVariance="0"
                            Foreground="{TemplateBinding Foreground}"
                            SegmentLength="3"
                            SegmentOffset="0.12"
                            StrokeWidth="2" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="SketchRectangleUC" Property="BorderBrush" Value="{StaticResource FocusedBorder-Sketch}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="SketchRectangleUC" Property="Background" Value="{StaticResource MouseOverBackground-Sketch}" />
                        </Trigger>
                        <Trigger Property="IsDragging" Value="True">
                            <Setter TargetName="SketchRectangleUC" Property="MinHeight" Value="20" />
                            <Setter TargetName="SketchRectangleUC" Property="Background" Value="{StaticResource BaseBorder-Sketch}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="SketchRectangleUC" Property="Background" Value="{StaticResource BaseBackground-Sketch}" />
                            <Setter TargetName="SketchRectangleUC" Property="BorderBrush" Value="{StaticResource DisabledBorder-Sketch}" />
                            <Setter TargetName="SketchRectangleUC" Property="SegmentVariance" Value="0.1" />
                            <Setter TargetName="SketchRectangleUC" Property="SegmentOffset" Value="0.15" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--
        Кнопка повторения (ScrollRepeatButton) эскиза
        Это шаблон кнопок повторения на дорожке полосы прокрутки
    -->
    <Style
        x:Key="ScrollRepeatButton-Sketch"
        d:IsControlPart="True"
        TargetType="{x:Type RepeatButton}">
        <Setter Property="Foreground" Value="{StaticResource BaseBorder-Sketch}" />
        <Setter Property="BorderBrush" Value="{StaticResource BaseBorder-Sketch}" />
        <Setter Property="Background" Value="{StaticResource BaseBackground-Sketch}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <!--  В качестве корневого элемента используется Grid, поскольку так проще добавлять дополнительные элементы для настройки кнопки  -->
                    <Grid x:Name="Grid" Background="#00000000" />
                    <!--  Каждое состояние устанавливает кисть на границе (Border) шаблона  -->
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocused" Value="true" />
                        <Trigger Property="IsMouseOver" Value="true" />
                        <Trigger Property="IsPressed" Value="true" />
                        <Trigger Property="IsEnabled" Value="true" />
                        <Trigger Property="IsEnabled" Value="false" />
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Sketch ScrollBar  -->
    <Style x:Key="ScrollBar-Sketch" TargetType="{x:Type ScrollBar}">
        <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
        <Setter Property="Foreground" Value="{StaticResource BaseBorder-Sketch}" />
        <Setter Property="BorderBrush" Value="{StaticResource BaseBorder-Sketch}" />
        <Setter Property="Background" Value="{StaticResource BaseBackground-Sketch}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid x:Name="GridRoot">
                        <Grid.RowDefinitions>
                            <RowDefinition MaxHeight="18" />
                            <RowDefinition Height="0.00001*" />
                            <RowDefinition MaxHeight="18" />
                        </Grid.RowDefinitions>

                        <Grid>
                            <RepeatButton
                                x:Name="DecreaseRepeat"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Command="ScrollBar.LineUpCommand"
                                FocusVisualStyle="{StaticResource FocusControl-Sketch}"
                                Foreground="{TemplateBinding Foreground}"
                                Style="{StaticResource RepeatButton-Sketch}" />
                            <!--  маленький треугольник  -->
                        </Grid>
                        <SketchControls:SketchRectangleUC
                            Grid.RowSpan="3"
                            Grid.ColumnSpan="1"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Background="{x:Null}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Foreground="{TemplateBinding Foreground}"
                            StrokeWidth="2" />

                        <!--  Дорожка (Track) — это особый контейнер для компоновки, который задает размеры ползунка и кнопок повторения, которые осуществляют прокрутку в одну или в другую сторону  -->
                        <Track
                            x:Name="PART_Track"
                            Grid.Row="1"
                            IsDirectionReversed="true"
                            Orientation="Vertical">
                            <Track.Thumb>
                                <Thumb
                                    Width="Auto"
                                    Height="Auto"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    Foreground="{TemplateBinding Foreground}"
                                    Style="{StaticResource Thumb-Sketch}" />
                            </Track.Thumb>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton
                                    x:Name="PageUp"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    Command="ScrollBar.PageDownCommand"
                                    FocusVisualStyle="{StaticResource FocusControl-Sketch}"
                                    Foreground="{TemplateBinding Foreground}"
                                    Style="{StaticResource ScrollRepeatButton-Sketch}" />
                            </Track.IncreaseRepeatButton>
                            <Track.DecreaseRepeatButton>
                                <RepeatButton
                                    x:Name="PageDown"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    Command="ScrollBar.PageUpCommand"
                                    FocusVisualStyle="{StaticResource FocusControl-Sketch}"
                                    Foreground="{TemplateBinding Foreground}"
                                    Style="{StaticResource ScrollRepeatButton-Sketch}" />
                            </Track.DecreaseRepeatButton>
                        </Track>

                        <Grid Grid.Row="2">
                            <RepeatButton
                                x:Name="IncreaseRepeat"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Command="ScrollBar.LineDownCommand"
                                FocusVisualStyle="{StaticResource FocusControl-Sketch}"
                                Foreground="{TemplateBinding Foreground}"
                                RenderTransformOrigin="0.5,0.5"
                                Style="{StaticResource RepeatButton-Sketch}">
                                <RepeatButton.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="-1" />
                                        <SkewTransform AngleX="0" AngleY="0" />
                                        <RotateTransform Angle="0" />
                                        <TranslateTransform X="0" Y="0" />
                                    </TransformGroup>
                                </RepeatButton.RenderTransform>
                            </RepeatButton>
                            <!--  маленький треугольник  -->
                        </Grid>
                    </Grid>

                    <!--
                        Этот раздел использует единый шаблон для полосы прокрутки (ScrollBar) и поворачивает его в горизонтальное положение (Horizontal)
                        Он также изменяет команды, чтобы команды "Вверх" и "Вниз" заменялись командами "Влево" и "Вправо"
                    -->
                    <ControlTemplate.Triggers>
                        <Trigger Property="Orientation" Value="Horizontal">

                            <!--  Поворот полосы прокрутки (ScrollBar) из вертикального в горизонтальное положение  -->
                            <Setter TargetName="GridRoot" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>

                            <!--  Дорожка (Track) имеет внутреннюю привязку к ориентации (Orientation), поэтому необходимо повернуть ее обратно в вертикальное положение (Vertical)  -->
                            <Setter TargetName="PART_Track" Property="Orientation" Value="Vertical" />

                            <!--  Изменение команд для их выполнения при горизонтальном положении  -->
                            <Setter TargetName="DecreaseRepeat" Property="Command" Value="ScrollBar.LineLeftCommand" />
                            <Setter TargetName="IncreaseRepeat" Property="Command" Value="ScrollBar.LineRightCommand" />
                            <Setter TargetName="PageDown" Property="Command" Value="ScrollBar.PageLeftCommand" />
                            <Setter TargetName="PageUp" Property="Command" Value="ScrollBar.PageRightCommand" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--
        Кнопка повторения (RepeatButton) ползунка эскиза
        Это шаблон кнопок повторения на дорожке ползунка
    -->
    <Style
        x:Key="SliderRepeatButton-Sketch"
        d:IsControlPart="True"
        TargetType="{x:Type RepeatButton}">
        <Setter Property="Foreground" Value="{StaticResource BaseBorder-Sketch}" />
        <Setter Property="BorderBrush" Value="{StaticResource BaseBorder-Sketch}" />
        <Setter Property="Background" Value="{StaticResource BaseBackground-Sketch}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <!--  В качестве корневого элемента используется Grid, поскольку так проще добавлять дополнительные элементы для настройки кнопки  -->
                    <Grid x:Name="Grid">
                        <Rectangle Fill="#00000000" Stroke="#00000000" />
                        <!--  сделан прозрачным, чтобы была видна дорожка  -->
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--
        Ползунок эскиза
        Аналогично полосе прокрутки (ScrollBar) в данном шаблоне используется дорожка (Track) для компоновки перетаскиваемого ползунка (Thumb) с кнопками повторения "Вверх" и "Вниз".
        В нем используются элементы управления Thumb-Sketch и SliderRepeatButton-Sketch для кнопок повторения "Страница вверх" и "Страница вниз"
    -->
    <Style x:Key="Slider-Sketch" TargetType="{x:Type Slider}">
        <Setter Property="Foreground" Value="{StaticResource BaseForeground-Sketch}" />
        <Setter Property="BorderBrush" Value="{StaticResource BaseBorder-Sketch}" />
        <Setter Property="Background" Value="{StaticResource BaseBackground-Sketch}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Slider}">
                    <Grid x:Name="GridRoot">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <!--  Элемент управления TickBar отображает шкалу для полосы ползунка (Slider)  -->
                        <TickBar
                            x:Name="TopTick"
                            Height="4"
                            Fill="{TemplateBinding Foreground}"
                            Placement="Top"
                            SnapsToDevicePixels="True"
                            Visibility="Collapsed" />

                        <Grid
                            Grid.Row="1"
                            Height="19"
                            Margin="0,0,0,0"
                            VerticalAlignment="Bottom">
                            <SketchControls:SketchRectangleUC
                                x:Name="SketchRectangleUC"
                                Margin="4,6,4,6"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                FocusVisualStyle="{StaticResource FocusControl-Sketch}"
                                Foreground="{TemplateBinding Foreground}"
                                SegmentLength="8"
                                SegmentOffset="0.1"
                                SegmentVariance="0.1"
                                StrokeWidth="2" />
                        </Grid>

                        <!--  На дорожке (Track) расположены кнопки повторения и ползунок  -->
                        <Track x:Name="PART_Track" Grid.Row="1">
                            <Track.Thumb>
                                <Thumb
                                    MinHeight="20"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    Foreground="{TemplateBinding Foreground}"
                                    Style="{StaticResource Thumb-Sketch}" />
                            </Track.Thumb>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton
                                    Background="{TemplateBinding Background}"
                                    Command="Slider.IncreaseLarge"
                                    Foreground="{TemplateBinding Foreground}"
                                    Style="{StaticResource SliderRepeatButton-Sketch}" />
                                <!--  он сделан прозрачным, чтобы быть интерактивным, но дорожка все равно видна под ним  -->
                            </Track.IncreaseRepeatButton>
                            <Track.DecreaseRepeatButton>
                                <RepeatButton
                                    Background="{TemplateBinding Background}"
                                    Command="Slider.DecreaseLarge"
                                    Foreground="{TemplateBinding Foreground}"
                                    Style="{StaticResource SliderRepeatButton-Sketch}" />
                            </Track.DecreaseRepeatButton>
                        </Track>

                        <TickBar
                            x:Name="BottomTick"
                            Grid.Row="2"
                            Height="4"
                            Fill="{TemplateBinding Foreground}"
                            Placement="Bottom"
                            SnapsToDevicePixels="True"
                            Visibility="Collapsed" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TickPlacement" Value="TopLeft">
                            <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="TickPlacement" Value="BottomRight">
                            <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="TickPlacement" Value="Both">
                            <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
                            <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="SketchRectangleUC" Property="Background" Value="{StaticResource BaseBackground-Sketch}" />
                            <Setter TargetName="SketchRectangleUC" Property="BorderBrush" Value="{StaticResource DisabledBorder-Sketch}" />
                        </Trigger>

                        <!--  По умолчанию ползунок является горизонтальным (Horizontal); для создания вертикального (Vertical) ползунка используется поворот  -->
                        <Trigger Property="Orientation" Value="Vertical">
                            <Setter TargetName="GridRoot" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                            <!--  Дорожка (Track) поворачивается в зависимости от ориентации, поэтому ее нужно явным образом возвращать в прежнее положение  -->
                            <Setter TargetName="PART_Track" Property="Orientation" Value="Horizontal" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Sketch ListBox  -->

    <Style x:Key="ListBox-Sketch" TargetType="{x:Type ListBox}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
        <Setter Property="Foreground" Value="{StaticResource BaseForeground-Sketch}" />
        <Setter Property="BorderBrush" Value="{StaticResource BaseBorder-Sketch}" />
        <Setter Property="Background" Value="{StaticResource BaseBackground-Sketch}" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource ListBoxItem-Sketch}" />
        <Setter Property="FontFamily" Value="{StaticResource FontFamily-Sketch}" />
        <Setter Property="FontSize" Value="{StaticResource SizeDouble-Sketch}" />
        <Setter Property="FontWeight" Value="{StaticResource FontWeight-Sketch}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <Grid>
                        <ScrollViewer
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Focusable="false"
                            Foreground="{TemplateBinding Foreground}"
                            Style="{StaticResource ScrollWithoutBorder}">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            <!--  StackPanel используется для отображения дочерних элементов путем установки значения True в свойстве IsItemsHost  -->
                        </ScrollViewer>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false" />
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style x:Key="ListBox-Sketch2" TargetType="{x:Type ListBox}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
        <Setter Property="Foreground" Value="{StaticResource BaseForeground-Sketch}" />
        <Setter Property="BorderBrush" Value="{StaticResource BaseBorder-Sketch}" />
        <Setter Property="Background" Value="{StaticResource BaseBackground-Sketch}" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource ListBoxItem-Sketch}" />
        <Setter Property="FontFamily" Value="{StaticResource FontFamily-Sketch}" />
        <Setter Property="FontSize" Value="{StaticResource SizeDouble-Sketch}" />
        <Setter Property="FontWeight" Value="{StaticResource FontWeight-Sketch}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <Grid>
                        <ScrollViewer
                            Margin="1"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Focusable="false"
                            Foreground="{TemplateBinding Foreground}"
                            Style="{StaticResource ScrollWithoutBorder}">
                            <ItemsPresenter Margin="2,2,2,2" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            <!--  StackPanel используется для отображения дочерних элементов путем установки значения True в свойстве IsItemsHost  -->
                        </ScrollViewer>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false" />
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </Trigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=ItemsSource, Converter={StaticResource subtasksListConverter}}" Value="0">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--  Sketch TabControl  -->
    <Style x:Key="TabControl-Sketch" TargetType="{x:Type TabControl}">
        <Setter Property="FontSize" Value="{StaticResource SizeDouble-Sketch}" />
        <Setter Property="Foreground" Value="{StaticResource BaseForeground-Sketch}" />
        <Setter Property="Padding" Value="4,4,4,4" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="{StaticResource BaseBorder-Sketch}" />
        <Setter Property="BorderBrush" Value="{StaticResource BaseBorder-Sketch}" />
        <Setter Property="Background" Value="{StaticResource BaseBackground-Sketch}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid
                        ClipToBounds="true"
                        KeyboardNavigation.TabNavigation="Local"
                        SnapsToDevicePixels="true">
                        <Grid.RowDefinitions>
                            <RowDefinition x:Name="RowDefinition0" Height="Auto" />
                            <RowDefinition x:Name="RowDefinition1" Height="*" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="ColumnDefinition0" />
                            <ColumnDefinition x:Name="ColumnDefinition1" Width="0" />
                        </Grid.ColumnDefinitions>
                        <TabPanel
                            x:Name="HeaderPanel"
                            Grid.Row="0"
                            Grid.Column="0"
                            Margin="0,2,2,0"
                            VerticalAlignment="Bottom"
                            Panel.ZIndex="1"
                            IsItemsHost="true"
                            KeyboardNavigation.TabIndex="1" />
                        <Grid
                            x:Name="ContentPanel"
                            Grid.Row="1"
                            Grid.Column="0"
                            Margin="0,-2,0,0"
                            KeyboardNavigation.DirectionalNavigation="Contained"
                            KeyboardNavigation.TabIndex="2"
                            KeyboardNavigation.TabNavigation="Local">
                            <SketchControls:SketchRectangleUC
                                x:Name="SketchRectangleUC"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                ExtensionLength="0"
                                ExtensionVariance="0"
                                Foreground="{TemplateBinding Foreground}"
                                SegmentLength="8"
                                SegmentOffset="0.12"
                                SegmentVariance="0.1"
                                StrokeWidth="1" />
                            <ContentPresenter
                                x:Name="PART_SelectedContentHost"
                                Margin="5,5,5,5"
                                ContentSource="SelectedContent"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter TargetName="HeaderPanel" Property="Grid.Row" Value="1" />
                            <Setter TargetName="RowDefinition0" Property="Height" Value="*" />
                            <Setter TargetName="RowDefinition1" Property="Height" Value="Auto" />
                            <Setter TargetName="HeaderPanel" Property="Margin" Value="2,0,2,2" />
                            <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
                            <Setter TargetName="ContentPanel" Property="Margin" Value="0,0,0,0" />
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Left">
                            <Setter TargetName="HeaderPanel" Property="Grid.Row" Value="0" />
                            <Setter TargetName="HeaderPanel" Property="Grid.Column" Value="0" />
                            <Setter TargetName="ColumnDefinition0" Property="Width" Value="Auto" />
                            <Setter TargetName="ColumnDefinition1" Property="Width" Value="*" />
                            <Setter TargetName="HeaderPanel" Property="Margin" Value="2,2,0,2" />
                            <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
                            <Setter TargetName="ContentPanel" Property="Grid.Column" Value="1" />
                            <Setter TargetName="ContentPanel" Property="Margin" Value="0,0,0,0" />
                            <Setter TargetName="RowDefinition1" Property="Height" Value="*" />
                            <Setter TargetName="ContentPanel" Property="Grid.RowSpan" Value="2" />
                            <Setter TargetName="RowDefinition0" Property="Height" Value="Auto" />
                            <Setter TargetName="RowDefinition0" Property="MinHeight" Value="12.98" />
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter TargetName="HeaderPanel" Property="Grid.Row" Value="0" />
                            <Setter TargetName="HeaderPanel" Property="Grid.Column" Value="1" />
                            <Setter TargetName="ColumnDefinition0" Property="Width" Value="*" />
                            <Setter TargetName="ColumnDefinition1" Property="Width" Value="Auto" />
                            <Setter TargetName="HeaderPanel" Property="Margin" Value="0,2,2,2" />
                            <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
                            <Setter TargetName="ContentPanel" Property="Margin" Value="0,0,0,0" />
                            <Setter TargetName="RowDefinition0" Property="Height" Value="Auto" />
                            <Setter TargetName="RowDefinition1" Property="Height" Value="*" />
                            <Setter TargetName="ContentPanel" Property="Grid.RowSpan" Value="2" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.GrayTextBrushKey}}" />
                            <Setter TargetName="SketchRectangleUC" Property="BorderBrush" Value="{StaticResource DisabledBorder-Sketch}" />
                            <Setter TargetName="SketchRectangleUC" Property="Foreground" Value="{StaticResource DisabledForeground-Sketch}" />
                            <Setter TargetName="SketchRectangleUC" Property="Background" Value="{StaticResource BaseBackground-Sketch}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="FontFamily" Value="{StaticResource FontFamily-Sketch}" />
        <Setter Property="FontWeight" Value="{StaticResource FontWeight-Sketch}" />
    </Style>

    <!--  Sketch TabItem Focus Visual  -->
    <Style x:Key="TabItemFocusVisual-Sketch">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle
                        Margin="3,3,3,1"
                        SnapsToDevicePixels="true"
                        Stroke="{StaticResource BaseBorder-Sketch}"
                        StrokeDashArray="1 2"
                        StrokeThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Sketch TabItem  -->
    <Style
        x:Key="TabItem-Sketch"
        d:IsControlPart="true"
        TargetType="{x:Type TabItem}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource TabItemFocusVisual-Sketch}" />
        <Setter Property="Foreground" Value="{StaticResource BaseForeground-Sketch}" />
        <Setter Property="Padding" Value="6,1,6,1" />
        <Setter Property="Foreground" Value="{StaticResource BaseBorder-Sketch}" />
        <Setter Property="BorderBrush" Value="{StaticResource BaseBorder-Sketch}" />
        <Setter Property="Background" Value="{StaticResource BaseBackground-Sketch}" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="FontFamily" Value="{StaticResource FontFamily-Sketch}" />
        <Setter Property="FontSize" Value="{StaticResource SizeDouble-Sketch}" />
        <Setter Property="Foreground" Value="{StaticResource BaseBorder-Sketch}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid
                        x:Name="grid"
                        RenderTransformOrigin="0.5,0.5"
                        SnapsToDevicePixels="true">
                        <Grid.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform />
                                <SkewTransform />
                                <RotateTransform />
                                <TranslateTransform />
                            </TransformGroup>
                        </Grid.RenderTransform>
                        <Rectangle
                            x:Name="bgUnselected"
                            Margin="1,1,1,0"
                            Fill="#E7E7E7"
                            Stroke="{x:Null}" />
                        <SketchControls:SketchRectangleUC
                            x:Name="border"
                            Background="{x:Null}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Foreground="{TemplateBinding Foreground}"
                            SegmentLength="8"
                            SegmentOffset="0.12"
                            SegmentVariance="0.1"
                            StrokeWidth="1" />
                        <Rectangle
                            x:Name="bgSelected"
                            Margin="2,2,2,-1"
                            Fill="{TemplateBinding Background}"
                            Stroke="{x:Null}"
                            Visibility="Collapsed" />
                        <Grid x:Name="Bd">
                            <ContentPresenter
                                x:Name="Content"
                                Margin="10,5,7,1"
                                HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                ContentSource="Header"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="bgUnselected" Property="Opacity" Value="0.5" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Panel.ZIndex" Value="1" />
                            <Setter TargetName="bgSelected" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter TargetName="bgUnselected" Property="Margin" Value="1,0,1,1" />
                            <Setter TargetName="bgSelected" Property="Margin" Value="2,-1,2,2" />
                            <Setter TargetName="grid" Property="Margin" Value="0,-2,0,0" />
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Left">
                            <Setter TargetName="bgUnselected" Property="Margin" Value="1,1,0,1" />
                            <Setter TargetName="bgSelected" Property="Margin" Value="2,2,-1,2" />
                            <Setter TargetName="grid" Property="Margin" Value="0,0,-2,0" />
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter TargetName="grid" Property="Margin" Value="-2,0,0,0" />
                            <Setter TargetName="bgUnselected" Property="Margin" Value="0,1,1,1" />
                            <Setter TargetName="bgSelected" Property="Margin" Value="-1,2,2,2" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.GrayTextBrushKey}}" />
                            <Setter TargetName="border" Property="Background" Value="{StaticResource DisabledBackground-Sketch}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource DisabledBorder-Sketch}" />
                            <Setter TargetName="border" Property="Foreground" Value="{StaticResource DisabledForeground-Sketch}" />
                            <Setter TargetName="Content" Property="Opacity" Value="0.5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="FontWeight" Value="{StaticResource FontWeight-Sketch}" />
        <Style.Triggers>
            <Trigger Property="Selector.IsSelected" Value="True">
                <Setter Property="Foreground" Value="{StaticResource PressedForeground-Sketch}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--  Sketch menu - базовый  -->
    <Style x:Key="TopMenu" TargetType="{x:Type MenuItem}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Margin" Value="0,0,0,0" />
    </Style>

    <!--  Подменю  -->
    <Style x:Key="SubMenu" TargetType="{x:Type MenuItem}">
        <Setter Property="Background" Value="{StaticResource Brush1}" />
        <Setter Property="Foreground" Value="{StaticResource BaseForeground-Sketch}" />
        <Setter Property="Margin" Value="-5,0,0,0" />
        <Setter Property="BorderBrush" Value="{StaticResource TopBrush}" />
        <Style.Triggers>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter Property="Background" Value="Black" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource BorderBrush}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="Black" />
                <Setter Property="Background" Value="{StaticResource 2MenuBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  Sketch Textbox - базовый  -->
    <Style x:Key="BasicTextBox-Sketch" TargetType="{x:Type TextBox}">
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="Foreground" Value="{StaticResource BaseBorder-Sketch}" />
        <Setter Property="BorderBrush" Value="{StaticResource BaseBorder-Sketch}" />
        <Setter Property="Background" Value="{StaticResource BaseBackground-Sketch}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Grid>
                        <!--  Реализация помещает содержимое (Content) в область прокрутки (ScrollViewer). Для правильного функционирования этого элемента управления ему необходимо присвоить имя PART_ContentHost  -->
                        <!--  ReSharper disable Xaml.StaticResourceNotResolved  -->
                        <ScrollViewer
                            x:Name="PART_ContentHost"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            FontFamily="./#Segoe Print"
                            Foreground="{TemplateBinding Foreground}"
                            Style="{StaticResource ScrollViewer-Sketch2}"
                            d:IsStaticText="False" />
                        <!--  ReSharper restore Xaml.StaticResourceNotResolved  -->
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="PART_ContentHost" Property="Background" Value="LightGray" />
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="PART_ContentHost" Property="Background" Value="{StaticResource DisabledBackground-Sketch}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="SelectionBrush" Value="SteelBlue" />

        <Setter Property="FontFamily" Value="{StaticResource FontFamily-Sketch}" />
        <Setter Property="FontWeight" Value="{StaticResource FontWeight-Sketch}" />
        <Setter Property="FontSize" Value="{StaticResource SizeDouble-Sketch}" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource DisabledForeground-Sketch}" />
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="Foreground" Value="Black" />
                <Setter Property="FontWeight" Value="Bold" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  Sketch TextBox  -->
    <Style
        x:Key="TextBox-Sketch"
        BasedOn="{StaticResource BasicTextBox-Sketch}"
        TargetType="{x:Type TextBox}" />

    <!--  Sketch TextBlock - левый заголовок  -->
    <Style
        x:Key="TitleLeft-Sketch"
        d:StyleDefaultContent="Title Left"
        TargetType="{x:Type TextBlock}">
        <Setter Property="TextWrapping" Value="NoWrap" />
        <Setter Property="TextTrimming" Value="None" />
        <Setter Property="FontFamily" Value="{StaticResource FontFamily-Sketch}" />
        <Setter Property="FontSize" Value="40" />
        <Setter Property="Foreground" Value="{StaticResource BaseForeground-Sketch}" />
    </Style>

    <!--  Sketch TextBlock - центральный заголовок  -->
    <Style
        x:Key="TitleCenter-Sketch"
        d:StyleDefaultContent="Title Center"
        TargetType="{x:Type TextBlock}">
        <Setter Property="TextWrapping" Value="NoWrap" />
        <Setter Property="TextTrimming" Value="None" />
        <Setter Property="FontFamily" Value="{StaticResource FontFamily-Sketch}" />
        <Setter Property="FontSize" Value="40" />
        <Setter Property="Foreground" Value="{StaticResource BaseForeground-Sketch}" />
        <Setter Property="TextAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
    </Style>

    <!--  Sketch TextBlock - правый заголовок  -->
    <Style
        x:Key="TitleRight-Sketch"
        d:StyleDefaultContent="Title Right"
        TargetType="{x:Type TextBlock}">
        <Setter Property="TextWrapping" Value="NoWrap" />
        <Setter Property="TextTrimming" Value="None" />
        <Setter Property="FontFamily" Value="{StaticResource FontFamily-Sketch}" />
        <Setter Property="FontSize" Value="40" />
        <Setter Property="Foreground" Value="{StaticResource BaseForeground-Sketch}" />
        <Setter Property="TextAlignment" Value="Right" />
        <Setter Property="HorizontalAlignment" Value="Right" />
    </Style>

    <!--  Sketch TextBlock - левый подзаголовок  -->
    <Style
        x:Key="SubtitleLeft-Sketch"
        d:StyleDefaultContent="Subtitle Left"
        TargetType="{x:Type TextBlock}">
        <Setter Property="TextWrapping" Value="NoWrap" />
        <Setter Property="TextTrimming" Value="None" />
        <Setter Property="FontFamily" Value="{StaticResource FontFamily-Sketch}" />
        <Setter Property="FontSize" Value="23" />
        <Setter Property="Foreground" Value="{StaticResource BaseForeground-Sketch}" />
    </Style>

    <!--  Sketch TextBlock - центральный подзаголовок  -->
    <Style
        x:Key="SubtitleCenter-Sketch"
        d:StyleDefaultContent="Subtitle Center"
        TargetType="{x:Type TextBlock}">
        <Setter Property="TextWrapping" Value="NoWrap" />
        <Setter Property="TextTrimming" Value="None" />
        <Setter Property="FontFamily" Value="{StaticResource FontFamily-Sketch}" />
        <Setter Property="FontSize" Value="23" />
        <Setter Property="Foreground" Value="{StaticResource BaseForeground-Sketch}" />
        <Setter Property="TextAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
    </Style>

    <!--  Sketch TextBlock - правый подзаголовок  -->
    <Style
        x:Key="SubtitleRight-Sketch"
        d:StyleDefaultContent="Subtitle Right"
        TargetType="{x:Type TextBlock}">
        <Setter Property="TextWrapping" Value="NoWrap" />
        <Setter Property="TextTrimming" Value="None" />
        <Setter Property="FontFamily" Value="{StaticResource FontFamily-Sketch}" />
        <Setter Property="FontSize" Value="23" />
        <Setter Property="Foreground" Value="{StaticResource BaseForeground-Sketch}" />
        <Setter Property="TextAlignment" Value="Right" />
        <Setter Property="HorizontalAlignment" Value="Right" />
    </Style>

    <!--  Sketch TextBlock - текст слева  -->
    <Style
        x:Key="BodyLeft-Sketch"
        d:StyleDefaultContent="Body Text Left"
        TargetType="{x:Type TextBlock}">
        <Setter Property="TextWrapping" Value="NoWrap" />
        <Setter Property="TextTrimming" Value="None" />
        <Setter Property="FontFamily" Value="{StaticResource FontFamily-Sketch}" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Foreground" Value="{StaticResource BaseForeground-Sketch}" />
    </Style>

    <!--  Sketch TextBlock - текст в центре  -->
    <Style
        x:Key="BodyCenter-Sketch"
        d:StyleDefaultContent="Body Text Center"
        TargetType="{x:Type TextBlock}">
        <Setter Property="TextWrapping" Value="NoWrap" />
        <Setter Property="TextTrimming" Value="None" />
        <Setter Property="FontFamily" Value="{StaticResource FontFamily-Sketch}" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Foreground" Value="{StaticResource BaseForeground-Sketch}" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="TextAlignment" Value="Center" />
    </Style>

    <!--  TextBlock - текст справа в центре  -->
    <Style
        x:Key="BodyRight-Sketch"
        d:StyleDefaultContent="Body Text Right"
        TargetType="{x:Type TextBlock}">
        <Setter Property="TextWrapping" Value="NoWrap" />
        <Setter Property="TextTrimming" Value="None" />
        <Setter Property="FontFamily" Value="{StaticResource FontFamily-Sketch}" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Foreground" Value="{StaticResource BaseForeground-Sketch}" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="TextAlignment" Value="Right" />
    </Style>
    <Style x:Key="BorderStyle" TargetType="{x:Type Border}">
        <Setter Property="BorderThickness" Value="0" />
    </Style>
    <ItemsPanelTemplate x:Key="DataGridStackPanel">
        <StackPanel IsItemsHost="True" />
    </ItemsPanelTemplate>
    <Style
        x:Key="DescFild"
        d:StyleDefaultContent="Basic Text"
        TargetType="{x:Type TextBlock}">

        <Setter Property="DockPanel.Dock" Value="Right" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="TextAlignment" Value="Left" />
        <Setter Property="Margin" Value="2,0,0,0" />
        <Setter Property="Foreground" Value="{StaticResource BaseForeground-Sketch}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FontFamily" Value="{StaticResource FontFamily-Sketch}" />
        <Setter Property="FontStyle" Value="Italic" />
        <Setter Property="FontSize" Value="{StaticResource SizeDouble-Sketch}" />
        <Setter Property="Background" Value="Transparent" />
    </Style>
    <ControlTemplate x:Key="ContentControlClearTemplate" TargetType="{x:Type ContentControl}">
        <ContentPresenter
            Content="{TemplateBinding Content}"
            ContentStringFormat="{TemplateBinding ContentStringFormat}"
            ContentTemplate="{TemplateBinding ContentTemplate}" />
    </ControlTemplate>

    <Style
        x:Key="ListsStyleThinBorder"
        BasedOn="{StaticResource ListBox-Sketch2}"
        TargetType="{x:Type ListBox}">
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style
                    d:IsControlPart="True"
                    BasedOn="{StaticResource ListBoxItem-Sketch}"
                    TargetType="{x:Type ListBoxItem}">
                    <Setter Property="Template">
                        <Setter.Value>

                            <ControlTemplate TargetType="ListBoxItem">

                                <Border
                                    Name="Border"
                                    MinHeight="35"
                                    Margin="0"
                                    BorderBrush="Transparent"
                                    BorderThickness="0"
                                    SnapsToDevicePixels="true">
                                    <i:Interaction.Behaviors>
                                        <behavior:FrameworkElementDragBehavior />
                                        <behavior:FrameworkElementDropBehavior />
                                    </i:Interaction.Behaviors>

                                    <ContentPresenter />
                                </Border>

                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsSelected" Value="true">
                                        <Setter TargetName="Border" Property="BorderThickness" Value="1" />
                                        <Setter TargetName="Border" Property="BorderBrush" Value="Green" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>
    <Style
        x:Key="listsItemContainer"
        d:IsControlPart="True"
        BasedOn="{StaticResource ListBoxItem-Sketch}"
        TargetType="{x:Type ListBoxItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border
                        Name="Border"
                        MinHeight="35"
                        Margin="0"
                        BorderBrush="Transparent"
                        BorderThickness="0"
                        SnapsToDevicePixels="true">
                        <i:Interaction.Behaviors>
                            <behavior:FrameworkElementDragBehavior />
                            <behavior:FrameworkElementDropBehavior />
                        </i:Interaction.Behaviors>

                        <ContentPresenter />
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter TargetName="Border" Property="BorderThickness" Value="2.5" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="Green" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style
        x:Key="ThinListBoxStyle"
        BasedOn="{StaticResource ListBoxItem-Sketch}"
        TargetType="{x:Type ListBoxItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border
                        Name="Border"
                        MinHeight="20"
                        Margin="0"
                        BorderBrush="Transparent"
                        BorderThickness="0"
                        SnapsToDevicePixels="true">
                        <i:Interaction.Behaviors>
                            <behavior:FrameworkElementDragBehavior />
                            <behavior:FrameworkElementDropBehavior />
                        </i:Interaction.Behaviors>

                        <ContentPresenter />
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter TargetName="Border" Property="BorderThickness" Value="1" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="Green" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>



    <Style
        x:Key="ListsStyle"
        BasedOn="{StaticResource ListBox-Sketch2}"
        TargetType="{x:Type ListBox}">
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource ThinListBoxStyle}" />
    </Style>
</ResourceDictionary>